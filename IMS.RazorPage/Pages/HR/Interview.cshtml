@page
@using IMS.Repositories.Models.InterviewModel
@model IMS.RazorPage.Pages.HR.InterviewModel
@{
    var trainingProgramList = ViewData["Interviews"] as List<InterviewGetModel>;
    var filterModel = Model.filterModel;
    int totalAccountsCount = ViewData["TotalAccountsCount"] != null ? (int)ViewData["TotalAccountsCount"] : 0;
    int pageSize = Model.PageSize;
    int totalPages = (int)Math.Ceiling((decimal)totalAccountsCount / pageSize);

    var statuses = new List<SelectListItem>
    {
        new SelectListItem { Value = "0", Text = "Scheduled" },
        new SelectListItem { Value = "1", Text = "Completed" },
        new SelectListItem { Value = "2", Text = "Canceled" }
    };
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
    <div class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true" id="errorMessage" data-bs-delay="5000">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["ErrorMessage"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
    <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" id="successMessage" data-bs-delay="5000">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row justify-content-center mb-3">
        <div class="col-md-5">
            <!-- Search form -->
            <form id="filterForm" method="get" class="w-100">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search" aria-label="Search" name="SearchTerm" asp-for="SearchTerm">
                    <button class="btn btn-outline-secondary" type="submit" id="buttonSearch">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="m-4">
    @if (Model.Interviews != null && Model.Interviews.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Mail</th>
                    <th scope="col">Date</th>
                    <th scope="col">Time</th>
                    <th scope="col">Location</th>
                    <th scope="col">Status</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var assignment in Model.Interviews)
                {
                    var modalId = $"modal-{assignment.Id}";
                    var deleteModalId = $"modal-{assignment.Id}-delete";
                    <tr>
                        <td>@assignment.InternName</td>
                        <td>@assignment.InternMail</td>
                        <td>@assignment.Date.Value.ToShortDateString()</td>
                        <td>@assignment.Time</td>
                        <td>@assignment.Location</td>
                        <form method="post" asp-page-handler="EditStatus" asp-route-id="@assignment.Id">
                        <td>
                            <select class="form-select w-30" aria-label="Default select example" asp-for="InterviewStatus">
                                    @foreach (var status in statuses){
                                        if ((int)assignment.Status == int.Parse(status.Value))
                                        {
                                        <option value="@status.Value" selected>@status.Text</option>
                                        }
                                        else{
                                        <option value="@status.Value">@status.Text</option>
                                        }
                                    }
                            </select> 

                        </td>
                        <td>
                            <button type="submit" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#@modalId">
                                Edit
                            </button>
                        </td>

                        </form>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-center">No interviews found.</p>
    }
</div>
<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        var errorMessage = document.getElementById('errorMessage');
        var successMessage = document.getElementById('successMessage');
        if (errorMessage && errorMessage.querySelector('.toast-body').textContent.trim() !== '') {
            new bootstrap.Toast(errorMessage).show();
        }
        if (successMessage && successMessage.querySelector('.toast-body').textContent.trim() !== '') {
            new bootstrap.Toast(successMessage).show();
        }
    });
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
